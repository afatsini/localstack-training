name: Check Flask Server

on: 
  push:
    branches:
      - main  # Change to your default branch if it's not `main`

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify the Python version you need

      - name: Install Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version

      - name: Start localstack
        run: docker compose -f docker/docker-compose.yml up -d

      - name: Install Dependencies
        run: |
          pip install Flask boto3 terraform-local
    
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.5"

      - name: Terraform
        env:
          TF_LOG: "DEBUG"
        run: |
          terraform init
          tflocal apply -auto-approve

      - name: Run Flask Server
        run: |
          # Start the Flask server in the background
          python create_bucket.py &  # Make sure s3_server.py is in the root of your repo or adjust the path accordingly
          
          # Wait for the server to start
          sleep 5

      - name: Test Server Output
        run: |
          # Use curl to check the server output
          output=$(curl -s http://127.0.0.1:5000)
          echo "$output"  # Print the output for debugging purposes
          if [[ "$output" != *"Hello from index.html!"* ]]; then
            echo "Output did not match expected content."
            exit 1
          fi